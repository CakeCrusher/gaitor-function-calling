[{"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"render_diagram\", \"description\": \"Accepts a Mermaid diagram, processes it to create a visual representation, and provides a link to access the generated image.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"mermaidCode\": {\"type\": \"string\", \"description\": \"The code of the Mermaid Diagram to render\"}}, \"required\": [\"mermaidCode\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nCan you please diagram the relations between the different higher level systems and concepts of gtd [/INST] <FUNCTION_CALL_NAME>render_diagram</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"mermaidCode\": \"graph LR\\nA[Capture] --> B[Clarify]\\nB --> C[Organize]\\nC --> D[Reflect]\\nD --> E[Engage]\\nE --> A\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getWorkoutRoutine</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"gender\": \"M\", \"fitness_level\": 3, \"body_weight\": 70, \"parts\": [\"upper_body\", \"lower_body\", \"core\"], \"location\": \"home\", \"user_language_code\": \"en\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getWeatherForecast</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"cnt\": \"1\", \"city\": \"Alexandria\", \"country\": \"Egypt\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\n\"Show me 3 scholarly articles on Large Language Models\" [/INST] <FUNCTION_CALL_NAME>searchPapers</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"q\": \"Large Language Models\", \"page_number\": \"1\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/?chat=p1xLgQ&classification=research\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getText</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"text\": \"AI-powered Text-to-App Generator turns your app idea into Android and iOS apps- just provide text input.\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcribeVideo</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"videoId\": \"odlXFTGNb3Y\", \"segment\": 1, \"includeTimestamp\": true}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>findFreelancers</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"service\": \"lingerie\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.ncbi.nlm.nih.gov/pubmed/?term=Selank\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nBlog or article on people who learn nodejs I want their experience how they learn nodejs [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.freecodecamp.org/news/how-i-learned-node-js/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>fetchImage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"query\": \"chicken cooking\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nwhat is this page about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>getNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\", \"category\": \"technology\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://en.wikipedia.org/wiki/7,8-Dihydroxyflavone\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>fetchImage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"query\": \"complimentary images\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"fetchImage\", \"description\": \"Get images based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"The search term to find images for\"}}, \"required\": [\"query\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nGenerate cat image [/INST] <FUNCTION_CALL_NAME>fetchImage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"query\": \"cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nwhat is this site about [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getStep\", \"description\": \"Get the guide for the specified step in the plugin building process.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"step\": {\"type\": \"integer\", \"description\": \"The step number in the plugin building process.\"}}, \"required\": [\"step\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nQuel type d'extension es tu capable de cr\u00e9er ? [/INST] <FUNCTION_CALL_NAME>getStep</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>search</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"clothing line design course\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"generateMeme\", \"description\": \"Generate a meme.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"memeTemplateName\": {\"type\": \"string\", \"description\": \"The name of the meme template. Leave it empty if unclear, but try to guess if possible. This field is optional.\"}, \"memeText\": {\"type\": \"string\", \"description\": \"The text of the meme. If the user did not specify exactly, create your own based on the user's wishes. By default, use two lines separated by a single newline (unless you know the template requires more, such as the 'Expanding Brain' which requires four lines). Empty lines must not be provided. If it's a retry query, rewrite the text so that the number of non-empty lines equals \\\"correctLineNumber\\\". This field is required.\"}, \"isRetry\": {\"type\": \"boolean\", \"description\": \"Indicates whether this is a retry call after an error message was returned. This field is required.\"}}, \"additionalProperties\": false, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nGenerate a meme using the following text: `This is fine.` [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"welcome\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://gamerant.com/grand-theft-auto-6-fromsoftware-next-game-similar-high-standard\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getGTrends\", \"description\": \"Get Trends\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"geo\": {\"type\": \"string\", \"enum\": [\"IE\", \"US\", \"AR\", \"GB\", \"IL\", \"IT\", \"IN\", \"ID\", \"UA\", \"EG\", \"AU\", \"AT\", \"NL\", \"CA\", \"GR\", \"KE\", \"CO\", \"SA\", \"SG\", \"CH\", \"SE\", \"ES\", \"TH\", \"CZ\", \"CL\", \"DK\", \"DE\", \"TR\", \"NG\", \"NZ\", false, \"HU\", \"PH\", \"FI\", \"BR\", \"FR\", \"VN\", \"PE\", \"BE\", \"PL\", \"PT\", \"MY\", \"MX\", \"RO\", \"RU\", \"KR\", \"HK\", \"TW\", \"ZA\", \"JP\"], \"description\": \"The country code. Defaults to US.\"}, \"hl\": {\"type\": \"string\", \"enum\": [\"af\", \"sq\", \"am\", \"ar\", \"hy\", \"az\", \"eu\", \"be\", \"bn\", \"bs\", \"bg\", \"ca\", \"ceb\", \"ny\", \"zh-CN\", \"zh-TW\", \"co\", \"hr\", \"cs\", \"da\", \"nl\", \"en\", \"eo\", \"et\", \"tl\", \"fi\", \"fr\", \"fy\", \"gl\", \"ka\", \"de\", \"el\", \"gu\", \"ht\", \"ha\", \"haw\", \"iw\", \"hi\", \"hmn\", \"hu\", \"is\", \"ig\", \"id\", \"ga\", \"it\", \"ja\", \"jw\", \"kn\", \"kk\", \"km\", \"ko\", \"ku\", \"ky\", \"lo\", \"la\", \"lv\", \"lt\", \"lb\", \"mk\", \"mg\", \"ms\", \"ml\", \"mt\", \"mi\", \"mr\", \"mn\", \"my\", \"ne\", false, \"ps\", \"fa\", \"pl\", \"pt\", \"pa\", \"ro\", \"ru\", \"sm\", \"gd\", \"sr\", \"st\", \"sn\", \"sd\", \"si\", \"sk\", \"sl\", \"so\", \"es\", \"su\", \"sw\", \"sv\", \"tg\", \"ta\", \"te\", \"th\", \"tr\", \"uk\", \"ur\", \"uz\", \"vi\", \"cy\", \"xh\", \"yi\", \"zu\"], \"description\": \"The language code. Defaults to en.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"all\", \"business\", \"entertainment\", \"health\", \"technology\", \"sports\", \"topnews\"], \"description\": \"The category to filter by. Defaults to all.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nlatest trend for indonesia [/INST] <FUNCTION_CALL_NAME>parse_url_get</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://explodingtopics.com\", \"chat_context\": \"scrape_exploding_topics\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://en.wikipedia.org/wiki/Racetams\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>getNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>render_diagram</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"mermaidCode\": \"graph LR\\nA[Sunlight] --> B[Chlorophyll]\\nB --> C[Photosynthesis]\\nC --> D[Glucose]\\nC --> E[Oxygen]\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/\" [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.investors.com/news/is-meta-stock-a-buy-facebook-parent-wows-with-ai-glasses-avatars-chart-pattern/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>searchGames</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"raw_question\": \"Find a game similar to Dark Souls with\", \"query\": \"similar to Dark Souls\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"generateMeme\", \"description\": \"Generate a meme.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"memeTemplateName\": {\"type\": \"string\", \"description\": \"The name of the meme template. Leave it empty if unclear, but try to guess if possible. This field is optional.\"}, \"memeText\": {\"type\": \"string\", \"description\": \"The text of the meme. If the user did not specify exactly, create your own based on the user's wishes. By default, use two lines separated by a single newline (unless you know the template requires more, such as the 'Expanding Brain' which requires four lines). Empty lines must not be provided. If it's a retry query, rewrite the text so that the number of non-empty lines equals \\\"correctLineNumber\\\". This field is required.\"}, \"isRetry\": {\"type\": \"boolean\", \"description\": \"Indicates whether this is a retry call after an error message was returned. This field is required.\"}}, \"additionalProperties\": false, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nGenerate a meme using the following text: `This is fine.` [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"sports\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me the top 3 news related to ChatGPT [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.cbsnews.com/video/ai-the-next-battlefield/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/\" [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"funny coffee spill\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nou can try the following: \"In two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>qrCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"url\": \"https://www.awis.com\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>pdfExtract</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://drive.google.com/file/d/1sWfmYjKnQ5XhRv6OpL5PwxBxy9gvBEnh/view?usp=sharing\", \"page_number\": \"1\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cat gangster\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>fetchAvailableLanguages</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://www.youtube.com/watch?v=dcz5Kqpc_rw\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nhi [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.google.com/search?q=weather+in+berlin\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getWorkoutRoutine</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"gender\": \"M\", \"fitness_level\": 3, \"body_weight\": 70, \"parts\": [\"upper_body\", \"lower_body\", \"core\", \"cardio\"], \"location\": \"home\", \"user_language_code\": \"en\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>fetchAvailableLanguages</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://www.youtube.com/watch?v=dcz5Kqpc_rw&ab_channel=%D9%82%D9%86%D8%A7%D8%A9%D8%A7%D9%84%D9%85%D9%87%D8%B1%D9%8A%D8%A9%D8%A7%D9%84%D9%81%D8%B6%D8%A7%D8%A6%D9%8A%D8%A9\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://en.wikipedia.org/wiki/Tabernanthalog\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me scholarly 3 articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/?classification=research\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nVous \u00eates un expert en explication. Votre but est de m'expliquer le terme \"Splash Texts\" en regardant sur le lien \"https://minecraft.fandom.com/wiki/Splash\" avec un titre principal. [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://minecraft.fandom.com/wiki/Splash\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nTell me in two sentences about the website openplugin.io [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getStep</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>browsePage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://www.tjdft.jus.br/consultas/jurisprudencia/jurisprudencia-em-temas/novo-codigo-de-processo-civil/da-tutela-provisoria-de-urgencia-de-natureza-antecipada#:~:text=A%20tutela%20provis%C3%B3ria%20de%20urg%C3%AAncia,ao%20resultado%20%C3%BAtil%20do%20processo\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\n [/INST] <FUNCTION_CALL_NAME>qrCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"url\": \"https://ufl.edu\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nSuppose we were the concieve of the universe as a series of vibrations strings, and the evolution of human life (specifically as a function of transedence - i.e. a human conscience 'destined' for transcendence). Then we could simultaneously consider that a contingency destined for transcendence would be the one with that understanding of itself continuously to the final point of transedence, where we can imagine the playing out of that life as a certain trajectory in time of infinite possibilities where we are interconnected with all information around us. Imagine how a string will vibrate until it comes to rest, unless external forces act upon it which create additional vibrations. Suppose information transmitting and reality as simply us all. And to come to rest and transcend the chaos life we must find silence and coherence [/INST] <FUNCTION_CALL_NAME>searchPapers</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"q\": \"graph neural networks\", \"page_number\": \"1\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getQRCode\", \"description\": \"Create a QR code\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"data\": {\"type\": \"string\", \"description\": \"The data to encode in the QR code.\"}, \"size\": {\"type\": \"string\", \"description\": \"The size of the QR code.\", \"default\": \"100x100\"}, \"alt\": {\"type\": \"string\", \"description\": \"The alt text for the QR code image.\"}, \"title\": {\"type\": \"string\", \"description\": \"The title for the QR code image.\"}}, \"required\": []}}}}]</FUNCTIONS>\n<</SYS>>\n\nAleksanteri is investing $10,000 into a savings account starting in January. The account will compound every month. If the account pays 0.8% APR, then how much money will be in his account after six months? The bank will always round the interest to the nearest penny at the end of each month.\n\n \n\nJanuary\tFebruary\tMarch\tApril\tMay\tJune\nPrincipal\t\t\t\t\t\t\nInterest (0.8% APR)\t\t\t\t\t\t\nTotal\t\t\t\t\t\t\n \n\nComplete the table and then answer the following questions. Does the amount of money grow at the same rate each month? How much money does Aleksanteri have at the end of the six months? Does compounding your interest give you more money? [/INST] <FUNCTION_CALL_NAME>getQRCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"data\": \"Hello, world!\", \"size\": \"200\", \"alt\": \"QR Code\", \"title\": \"QR Code\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"technology\", \"keyword\": \"industry\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences, can you tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"snowman\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn 6 sentences tell me what this site is about https://www.openplugin.io/\" [/INST] <FUNCTION_CALL_NAME>searchGames</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"raw_question\": \"What can you tell me about Starfield?\", \"query\": \"Starfield\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.cancer.org/cancer/lung-cancer/small-cell-lung-cancer.html\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nwhats the current date and time in india [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.google.com/search?q=current+date+and+time+in+india\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>postRenderMindmap</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"markdown\": \"- Causes of the Vietnam War\\n  - French colonization\\n  - Cold War tensions\\n  - Domino theory\\n- Major events\\n  - Gulf of Tonkin incident\\n  - Tet Offensive\\n  - My Lai Massacre\\n- Key figures\\n  - Ho Chi Minh\\n  - Ngo Dinh Diem\\n  - Lyndon B. Johnson\\n- Impact of the war\\n  - Loss of lives\\n  - Anti-war movement\\n  - Political consequences\", \"title\": \"Mind Map of Vietnam War\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\n\"In two sentences tell me what this site is about https://www.openplugin.io/\" [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nWhat is at https://massgrave.dev? [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://fmhy.net\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"qrCode\", \"description\": \"Generate a QR code\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"url\": {\"type\": \"string\", \"description\": \"The URL to generate a QR code from.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\ngenerate healines for ads from url: https://waan.co [/INST] <FUNCTION_CALL_NAME>qrCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"url\": \"https://waan.co\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"technology\", \"keyword\": \"business\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"checkWeatherUsingGET\", \"description\": \"Get current weather information\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"location\": {\"type\": \"string\", \"description\": \"Location for which to retrieve weather information.\"}}, \"required\": [\"location\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nget the current weather [/INST] <FUNCTION_CALL_NAME>GetAirQualityByZipCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"zipCode\": \"90210\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>searchTools</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"search\": \"sports betting\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getHashtagFollowerCount\", \"description\": \"Get the follower count, follower count over time and related trending hashtags of a specified LinkedIn hashtag\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"hashtag\": {\"type\": \"string\", \"description\": \"The specified hashtag.\"}}, \"required\": [\"hashtag\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nlinkedin hashtags for tech [/INST] <FUNCTION_CALL_NAME>fetchImage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"query\": \"dog\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\ntry [/INST] <FUNCTION_CALL_NAME>getSearchNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\", \"topic\": \"Savona\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nTell me what is about artificial generative intelligence   [/INST] <FUNCTION_CALL_NAME>getSearchNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\", \"topic\": \"artificial intelligence\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nMy site is about door to door delivery based on the location of customers and clients. [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.example.com\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://en.wikipedia.org/wiki/Chain_of_density\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.seznam.cz/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/\" [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>fetchAvailableLanguages</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://www.youtube.com/watch?v=Si6NbKqYEd8\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"business\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"keyword\": \"artificial intelligence\", \"language\": \"english\", \"country\": \"us\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nwhat is this site about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nhui [/INST] <FUNCTION_CALL_NAME>generateMeme</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"memeTemplateName\": \"edgy\", \"memeText\": \"When you finally get the CSS to work\\nbut it looks like a crime scene\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.google.com/search?q=how+to+bypass+google+otp+at+account+creation\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.theguardian.com/technology/2023/oct/01/apple-says-software-bug-and-certain-apps-causing-iphone-15-overheating\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getWeatherByLocation</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"location\": \"London\", \"time\": \"current\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nin two sentences tell me what https://www.openplugin.io/ is about [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://r4ds.hadley.nz/joins#introduction\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.techradar.com/news\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nGive me a detailed overview of bionic reading and how to utilize it as a functional tool for reading and learning [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6320916/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me the top 3 news related to ChatGPT [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://appleinsider.com/articles/23/10/01/apple-has-most-of-the-elements-it-needs-to-create-its-own-search-engine\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/\" [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"qrCode\", \"description\": \"Generate a QR code\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"url\": {\"type\": \"string\", \"description\": \"The URL to generate a QR code from.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\ncreate a qr code with text \"madarchod\" [/INST] <FUNCTION_CALL_NAME>qrCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"url\": \"madarchod\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nGive me nikkei 225's chart from 1980 to 1992 [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.macrotrends.net/2593/nikkei-225-index-historical-chart-data\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nd [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://sites.google.com/view/klubsportowyjawor/main\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nWhat is OpenPlugin? [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"celebrate\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"parse_url_get\", \"description\": \"Fetches the content of a given URL provided by the user\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"URL of the web page or pdf to be parsed\"}, \"chat_context\": {\"type\": \"string\", \"description\": \"Chat context for parsing the URL\"}}, \"required\": [\"url\", \"chat_context\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn one paragraph, summarize this essay https://docs.google.com/document/d/1S044ZjF1ii2dBcMqx-XR3Ac7av84TYd-Dyn2H93Yilc/edit [/INST] <FUNCTION_CALL_NAME>parse_url_get</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://wesleyscholar.com/wp-content/uploads/2019/04/Augustine-Confessions-vol-1.pdf\", \"chat_context\": \"There are 13 books/chapters in this. Summarize each one in two sentences.\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about \"www.openplugin.io\" [/INST] <FUNCTION_CALL_NAME>qrCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"url\": \"https://www.openplugin.io\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nsummarize this article https://www.cnbc.com/2023/10/29/pharmacy-staff-from-walgreens-chains-like-cvs-to-walk-out-again.html [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.cnbc.com/2023/10/29/pharmacy-staff-from-walgreens-chains-like-cvs-to-walk-out-again.html\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nin two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nWelche Nahrungserg\u00e4nzungsmittel werden auf BIPA.at verkauft.  [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.bipa.at/sortiment\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>create_pdf</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"camelcase_filename\": \"resume.pdf\", \"formatted_markdown\": \"# Resume\\n\\n**Name:** John Doe\\n\\n**Experience:** 5 years\\n\\n**Skills:** HTML, CSS, JavaScript\\n\\n**Education:** Bachelor's Degree in Computer Science\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.theguardian.com/technology/2023/oct/01/apple-says-software-bug-and-certain-apps-causing-iphone-15-overheating\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"technology\", \"keyword\": \"business\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"GetVideoSummaryTranscribeVideo\", \"description\": \"Get YouTube video transcriptions\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"YouTube video URL\"}}, \"required\": [\"url\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nhttps://youtu.be/-c4CNB80SRc?si=wGKsTrTJoIBpn5E0 [/INST] <FUNCTION_CALL_NAME>GetVideoSummaryTranscribeVideo</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://youtu.be/-c4CNB80SRc?si=wGKsTrTJoIBpn5E0\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"generateMeme\", \"description\": \"Generate a meme.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"memeTemplateName\": {\"type\": \"string\", \"description\": \"The name of the meme template. Leave it empty if unclear, but try to guess if possible. This field is optional.\"}, \"memeText\": {\"type\": \"string\", \"description\": \"The text of the meme. If the user did not specify exactly, create your own based on the user's wishes. By default, use two lines separated by a single newline (unless you know the template requires more, such as the 'Expanding Brain' which requires four lines). Empty lines must not be provided. If it's a retry query, rewrite the text so that the number of non-empty lines equals \\\"correctLineNumber\\\". This field is required.\"}, \"isRetry\": {\"type\": \"boolean\", \"description\": \"Indicates whether this is a retry call after an error message was returned. This field is required.\"}}, \"additionalProperties\": false, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nGenerate a meme using a picture of Messi and the theme of haters gonna hate [/INST] <FUNCTION_CALL_NAME>generateMeme</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"memeTemplateName\": \"haters_gonna_hate\", \"memeText\": \"Messi haters gonna hate\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me gifs of a gangster cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"gangster cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nhi [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://openai.com/plugin/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>search</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"web design\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"generateMeme\", \"description\": \"Generate a meme.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"memeTemplateName\": {\"type\": \"string\", \"description\": \"The name of the meme template. Leave it empty if unclear, but try to guess if possible. This field is optional.\"}, \"memeText\": {\"type\": \"string\", \"description\": \"The text of the meme. If the user did not specify exactly, create your own based on the user's wishes. By default, use two lines separated by a single newline (unless you know the template requires more, such as the 'Expanding Brain' which requires four lines). Empty lines must not be provided. If it's a retry query, rewrite the text so that the number of non-empty lines equals \\\"correctLineNumber\\\". This field is required.\"}, \"isRetry\": {\"type\": \"boolean\", \"description\": \"Indicates whether this is a retry call after an error message was returned. This field is required.\"}}, \"additionalProperties\": false, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me the cheating wife meme [/INST] <FUNCTION_CALL_NAME>generateMeme</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"memeTemplateName\": \"Distracted Girlfriend\", \"memeText\": \"cheating\\nwife\\nmeme\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nCan you recommend any 'adult versions of the dangerous book for boys/girls [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>render_diagram</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"mermaidCode\": \"graph LR\\n\\nA[Initiation]\\nB[Access Revocation]\\nC[Data Backup]\\nD[Equipment Collection]\\nE[Asset Recovery]\\nF[Email Forwarding]\\nG[Knowledge Transfer]\\nH[Account Deactivation]\\nI[Communication]\\nJ[Documentation]\\nK[Archiving]\\nL[Post-Offboarding Support]\\n\\nA --> B\\nB --> C\\nC --> D\\nD --> E\\nE --> F\\nF --> G\\nG --> H\\nH --> I\\nI --> J\\nJ --> K\\nK --> L\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nwhat is this site about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nWhat is the weather in LA? [/INST] <FUNCTION_CALL_NAME>qrCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"url\": \"https://weather.com\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"SearchHotels\", \"description\": \"Search for hotels or other accommodations in any place.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"checkIn\": {\"type\": \"string\", \"description\": \"Check in date in YYYY-MM-DD format.\", \"example\": \"2023-07-12\"}, \"checkOut\": {\"type\": \"string\", \"description\": \"Check out date in YYYY-MM-DD format. If user didn't specify check out date or number of nights, then use 1 day from check in.\", \"example\": \"2023-07-13\"}, \"currency\": {\"type\": \"string\", \"description\": \"3-char ISO 4217 currency code. Required if the user mentioned maximum price of a hotel or a budget in specific currency.\", \"default\": \"USD\", \"example\": \"USD\"}, \"destination\": {\"type\": \"string\", \"description\": \"The destination where the user wants to stay. It can be a place name or a hotel name.\"}, \"facilities\": {\"items\": {\"type\": \"string\", \"enum\": [\"free_wifi\", \"swimming_pool\", \"restaurant\", \"parking\", \"pet_friendly\", \"airport_shuttle\", \"kitchen\", \"hot_tub\", \"spa\", \"air_conditioned\"]}, \"type\": \"array\", \"description\": \"The list of requested facilities.\"}, \"maxNightlyPrice\": {\"type\": \"integer\", \"schema_format\": \"int64\", \"description\": \"Maximum hotel price per night or maximum user budget per night.\"}, \"numAdults\": {\"type\": \"integer\", \"schema_format\": \"int64\", \"description\": \"Number of adults that are staying.\"}, \"numChildren\": {\"type\": \"integer\", \"schema_format\": \"int64\", \"description\": \"Number of children that are staying.\"}, \"propertyType\": {\"type\": \"string\", \"enum\": [\"hotel\", \"apartment\", \"hostel\", \"motel\", \"vacation_rentals\"], \"description\": \"Property type. Use hotel, apartment or hostel is user requested one of this property types. Otherwise use vacation_rentals.\"}, \"sortType\": {\"type\": \"string\", \"enum\": [\"cheapest\"], \"description\": \"Sort type specifies how to sort hotels. Use it if the user wants specific type of hotels at the top.\"}, \"starRatings\": {\"items\": {\"type\": \"integer\", \"maximum\": 5.0, \"minimum\": 1.0, \"schema_format\": \"int64\"}, \"type\": \"array\", \"maxItems\": 5, \"minItems\": 1, \"description\": \"The list of hotel star ratings. Use it if the user mentioned number of stars.\"}}, \"type\": \"object\", \"required\": [\"destination\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nTell me what's going on in New York today [/INST] <FUNCTION_CALL_NAME>getNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\", \"category\": \"politics\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>create_pdf</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"camelcase_filename\": \"resume.pdf\", \"formatted_markdown\": \"# Resume\\n\\n**Name:** John Doe\\n\\n**Experience:** 5 years\\n\\n**Skills:** HTML, CSS, JavaScript\\n\\n**Education:** Bachelor's Degree in Computer Science\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nMy site is about door to door delivery based on the location of customers and clients. [/INST] <FUNCTION_CALL_NAME>qrCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"url\": \"https://www.example.com\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\n\"Show me 3 scholarly articles on Large Language Models\" [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nwhat is this page about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"http://localhost:3000/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>searchCourses</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"query\": \"machine learning\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me gifs of a gangster cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"gangster cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchProducts</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"searchTerm\": \"telefonia iphone\", \"quantity\": 10}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>getQRCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"data\": \"PDF417\", \"size\": \"200\", \"alt\": \"PDF417 Barcode\", \"title\": \"PDF417 Barcode\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nYou can try the following: \"In two sentences tell me what this site is about https://www.openplugin.io/\" [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nGet current news on chatgpt [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://cryptopotato.com/we-asked-chatgpt-will-the-next-ripple-xrp-bull-run-start\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nAnalyse the domain https://forex-chartanalysis.blogspot.com/ \nWhat is this site about. How is it's seo and what could be improved to this webpage to get more visitors. What domain and where should this  site be rebuilt to get succesful? What is your analaysis and conclusions? Tell the owner of this site step by step how to improve the webpage and show the most important steps with step by step bullet points? Where shoud this site migrate from blogger to be succesful? [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://forex-chartanalysis.blogspot.com/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me the most effective ai solutions which would heighten planning magic, empower financial revenue increase, logistic jamming retardation, gratifyingly aesthetic marketing and cost savings that would specifically apply to hosting a garage sale at a local residence during a weekend in october with sunshine [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.example.com/ai-solutions-for-garage-sale\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nTell me aboubtgis site [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.gis.com\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>create_pdf</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"camelcase_filename\": \"resume.pdf\", \"formatted_markdown\": \"Non devi scoraggiarti, la logica si pu\\u00f2 allenare e migliorare con la pratica e la pazienza. Ti consiglio di fare molti esercizi di diverso tipo e difficolt\\u00e0, cercando di capire la logica che sta dietro ogni problema e di applicarla al tuo algoritmo. Puoi trovare molti esercizi online:\\n\\n[Esercizi di logica]: un sito che propone vari esercizi di logica con soluzioni e spiegazioni.\\n[Esercizi di programmazione]: un sito che propone vari esercizi di programmazione in Python con soluzioni e spiegazioni.\\n[Esercizi di informatica]: un sito che propone vari esercizi di informatica con diagrammi di flusso, pseudocodice e codice.\\n\\nInfine, ti consiglio di non farti prendere dal panico e di affrontare i problemi con calma e metodo. Puoi usare delle tecniche di problem solving, per esempio queste:\\n\\n[Tecniche di problem solving]: un articolo che spiega alcune tecniche di problem solving con esempi e consigli.\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\n2023/10/14\u306b\u6c96\u7e04\u3067\u884c\u308f\u308c\u308b\u30e9\u30a4\u30d6\uff1f [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.example.com/events?date=2023-10-14&location=\\u6c96\\u7e04\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"piano cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"get_DiagramGuidelinesRoute\", \"description\": \"Diagram guidelines and themes to help rendering more effective diagrams\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"explicitlyRequestedByUserDiagramLanguage\": {\"type\": \"string\", \"enum\": [\"blockdiag\", \"bpmn\", \"bytefield\", \"seqdiag\", \"actdiag\", \"nwdiag\", \"packetdiag\", \"rackdiag\", \"c4-with-plantuml\", \"d2\", \"dbml\", \"ditaa\", \"erd\", \"excalidraw\", \"graphviz\", \"mermaid\", \"nomnoml\", \"pikchr\", \"plantuml\", \"structurizr\", \"svgbob\", \"umlet\", \"vega\", \"vegalite\", \"wavedrom\", \"wireviz\", \"markmap\"], \"description\": \"If the user has selected a specific language to use\"}, \"diagramType\": {\"type\": \"string\", \"enum\": [\"sequence\", \"use-case\", \"class\", \"object\", \"activity\", \"component\", \"deployment\", \"state\", \"timing\", \"graph\", \"entity-relationship\", \"user-journey\", \"gantt\", \"pie-chart\", \"requirement\", \"gitgraph\", \"mindmap\", \"timeline\", \"block\", \"network\", \"json\", \"yaml\", \"salt-wireframe\", \"rack\", \"grid\", \"dbml\", \"ascii\", \"digital-timing\", \"line-chart\", \"bar-chart\", \"histogram\"], \"description\": \"Type of the diagram\"}}, \"required\": [\"diagramType\"]}}}}, {\"name\": \"get__MermaidRoute\", \"description\": \"Taking a diagram, renders it and returns a link to the rendered image. Always request the diagram guidelines endpoint before requesting this endpoint\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"diagramLanguage\": {\"type\": \"string\", \"description\": \"Diagram language\", \"example\": \"mermaid\"}, \"diagramType\": {\"type\": \"string\", \"description\": \"Diagram type\", \"example\": \"graph\"}, \"d2Theme\": {\"type\": \"string\", \"description\": \"Theme for d2 diagram\", \"example\": \"neutral-grey_sketch\"}, \"diagram\": {\"type\": \"string\", \"description\": \"Diagram to render. Avoid using a multiline string, instead use explicit newline characters.\"}, \"remainingAttempts\": {\"type\": \"number\", \"description\": \"Track the number of remaining attempts to render the diagram\", \"default\": 3}}, \"required\": [\"diagramLanguage\", \"diagramType\", \"diagram\"]}}}}, {\"name\": \"get_ShowIdeasRoute\", \"description\": \"Show ideas to improve the diagram\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"diagramLanguage\": {\"type\": \"string\"}, \"diagramType\": {\"type\": \"string\"}}, \"required\": [\"diagramLanguage\", \"diagramType\"]}}}}, {\"name\": \"get_ExploreDiagramsRoute\", \"description\": \"Showcase diagrams that the plugin can render\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"diagramTypesToExplore\": {\"items\": {\"type\": \"string\", \"description\": \"Diagram type same as diagramType in diagramGuidelines\", \"example\": \"graph\"}, \"type\": \"array\", \"description\": \"Choose 3 diagram types that the user might want to render, the 1st diagram type should be the latest rendered diagram type\"}}, \"required\": [\"diagramTypesToExplore\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nCreate a diagram that explains the process of making a car. [/INST] <FUNCTION_CALL_NAME>get_DiagramGuidelinesRoute</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"explicitlyRequestedByUserDiagramLanguage\": \"mermaid\", \"diagramType\": \"flowchart\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>searchTools</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"search\": \"AIWizard\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nWhat is the new athens panathinaikos player signed [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"fr\", \"category\": \"sports\", \"keyword\": \"ldlc asvel coach\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nwhat is this site about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"gator\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nWelche Nahrungserg\u00e4nzungsmittel werden auf BIPA.at verkauft.  [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.bipa.at/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"generateSimpleAvatarVideo\", \"description\": \"Generate a simple video with a piece of transcript text.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"text\": {\"type\": \"string\", \"description\": \"The text transcript for the speech/voiceover to the video that the user wants to generate. Should be short and concise.\"}, \"title\": {\"type\": \"string\", \"description\": \"A short title for the video that the user wants to generate. Must be very short and concise.\"}, \"gender\": {\"type\": \"string\", \"enum\": [\"male\", \"female\"], \"description\": \"The gender of the avatar that appears in the user's requested video.\"}, \"skintone\": {\"type\": \"string\", \"enum\": [\"light\", \"dark\", \"asian\"], \"description\": \"The skin tone of the avatar that appears in the user's requested video.\"}}, \"type\": \"object\", \"required\": [\"text\"]}}}}, {\"name\": \"generatePresentationAvatarVideo\", \"description\": \"Generate a presentation video with an image and a piece of transcript text.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"text\": {\"type\": \"string\", \"description\": \"The text transcript for the speech/voiceover to the presentation video that the user wants to generate. Should be short and concise.\"}, \"image\": {\"type\": \"string\", \"description\": \"The URL to the image to be shown in the presentation video that the user wants to generate. Must be in jpg/jpeg/png/svg format.\"}, \"title\": {\"type\": \"string\", \"description\": \"A short title for the presentation video that the user wants to generate. Must be very short and concise.\"}, \"gender\": {\"type\": \"string\", \"enum\": [\"male\", \"female\"], \"description\": \"The gender of the avatar that appears in the user's requested presentation video.\"}}, \"type\": \"object\", \"required\": [\"text\", \"image\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nGenerate an avatar video using HeyGen for the following text: 'Hello, how are you today?' [/INST] <FUNCTION_CALL_NAME>generateCsv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"data\": [[\"Column 1\", \"Column 2\", \"Column 3\"], [\"Data 1\", \"Data 2\", \"Data 3\"], [\"Data 4\", \"Data 5\", \"Data 6\"]]}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>fetchCaptions</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://www.youtube.com/watch?v=zspIy4hmyFo\", \"format\": \"text\", \"type\": \"manual\", \"lang\": \"en\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"black metaller punching hippie\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getNews\", \"description\": \"This endpoint allows users to request real-time news updates or news categorized by topics such as politics, sports, entertainment, technology, business, fashion, and health. Each news item includes a link and publication date. The news is updated in real time.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"country\": {\"type\": \"string\", \"description\": \"The country code of the desired news, using lowercase abbreviations. For example, 'de' for Germany.\"}, \"language\": {\"type\": \"string\", \"description\": \"The language code for the desired news. If not provided, the default language of the specified country will be used.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"politics\", \"sports\", \"entertainment\", \"technology\", \"business\", \"fashion\", \"health\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('politics', 'sports', 'entertainment', 'technology', 'fashion', 'health') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}}, \"required\": [\"country\", \"language\"]}}}}, {\"name\": \"getSearchNews\", \"description\": \"This endpoint allows users to provide any topic-related description content at will, and returns the latest news on related topics around the world in a timely manner.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"country\": {\"type\": \"string\", \"description\": \"The country code of the desired news, using lowercase abbreviations. For example, 'de' for Germany.\"}, \"language\": {\"type\": \"string\", \"description\": \"The language code for the desired news. If not provided, the default language of the specified country will be used.\"}, \"topic\": {\"type\": \"string\", \"description\": \"The main topic that users want to search for news, such as Trump, star, game, movie, etc.\"}}, \"required\": [\"country\", \"language\", \"topic\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me news in esrael [/INST] <FUNCTION_CALL_NAME>getNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"israel\", \"language\": \"en\", \"category\": \"politics\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchGames\", \"description\": \"API for looking for games and game recommendations and comparisons\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"raw_question\": {\"type\": \"string\", \"description\": \"just pass user raw question\"}, \"query\": {\"type\": \"string\", \"description\": \"Use this field to finding games related to the conversation input. Please include as many specific keywords as possible;\"}}, \"type\": \"object\", \"required\": [\"raw_question\", \"query\"], \"title\": \"QueryGameRequest\"}}}}, {\"name\": \"searchGameRelatedContent\", \"description\": \"API for search game-related content\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"raw_question\": {\"type\": \"string\", \"description\": \"just pass user raw question\"}, \"query\": {\"type\": \"string\", \"description\": \"Use this field to submit up keywords for identifying the most relevant content like ugc,post etc to the conversation context. Please include as many specific keywords as possible;\"}}, \"type\": \"object\", \"required\": [\"raw_question\", \"query\"], \"title\": \"QueryContentRequest\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nNone [/INST] <FUNCTION_CALL_NAME>evaluateBusinessIdea</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"idea\": \"Truvox\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io [/INST] <FUNCTION_CALL_NAME>FontList</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about \"www.openplugin.io\" [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cumshots\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>qrCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"url\": \"Hello, World!\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nWhat is the weather in LA? [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.google.com/search?q=weather+in+LA\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"parse_url_get\", \"description\": \"Fetches the text content of a given URL provided by the user\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"URL of the web page to be parsed\"}, \"chat_context\": {\"type\": \"string\", \"description\": \"Chat context for parsing the URL\"}}, \"required\": [\"url\", \"chat_context\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nCan you read a landing page and then ask me what I'd like you to do with that information? [/INST] <FUNCTION_CALL_NAME>parse_url_get</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://www.grollmus.de/jobs-sps-experte-als-trainer/\", \"chat_context\": \"job_analysis\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>qrCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"url\": \"Hello, World!\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nplease search through this site and summarize this article https://www.cnbc.com/2023/10/29/pharmacy-staff-from-walgreens-chains-like-cvs-to-walk-out-again.html [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.cnbc.com/2023/10/29/top-wall-street-analysts-remain-optimistic-about-these-five-stocks.html\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"parse_url_get\", \"description\": \"Fetches the content of a given URL provided by the user\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"URL of the web page or pdf to be parsed\"}, \"chat_context\": {\"type\": \"string\", \"description\": \"Chat context for parsing the URL\"}}, \"required\": [\"url\", \"chat_context\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nhttps://drive.google.com/file/d/12Y7jAFhVZ3-JqVzSVJPnu80BaTydpI8w/view?usp=sharing bitte analysiere die pdf und den inhalt. um was geht es? [/INST] <FUNCTION_CALL_NAME>parse_url_get</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://drive.google.com/file/d/12Y7jAFhVZ3-JqVzSVJPnu80BaTydpI8w/view?usp=sharing\", \"chat_context\": \"landingpage_process_section\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.espncricinfo.com/series/icc-cricket-world-cup-2023-1200428\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"black metal punch hippie\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>postRenderFlowchart</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"mermaid\": \"graph TD\\n  Start --> Decision\\n  Decision --> Action\\n  Action --> End\", \"title\": \"Flowchart Example\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"fetchCaptions\", \"description\": \"Get the captions for a YouTube video in various languages\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"The URL of the YouTube video\"}, \"format\": {\"type\": \"string\", \"enum\": [\"srt\", \"text\"], \"description\": \"The format to return the captions in ('srt' or 'text')\", \"default\": \"text\"}, \"type\": {\"type\": \"string\", \"enum\": [\"auto\", \"manual\"], \"description\": \"The type of transcript to fetch ('auto' or 'manual')\", \"default\": \"manual\"}, \"lang\": {\"type\": \"string\", \"description\": \"The language code for the captions\"}}, \"required\": [\"url\", \"lang\"]}}}}, {\"name\": \"fetchAvailableLanguages\", \"description\": \"Get the available languages for a YouTube video's captions\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"The URL of the YouTube video\"}}, \"required\": [\"url\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nhttps://youtu.be/9EPlyiW-xGI?si=WweoWWubzx5MLwQU\nCan u provide me captions from this video [/INST] <FUNCTION_CALL_NAME>fetchAvailableLanguages</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://youtu.be/9EPlyiW-xGI?si=WweoWWubzx5MLwQU\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"funny cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getImage\", \"description\": \"Get the NASA Picture of the Day\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"searchImages\", \"description\": \"Get images from NASA based on a query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"q\": {\"type\": \"string\", \"description\": \"The search query\"}}, \"required\": [\"q\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nGet the daily picture from NASA's APOD and display it in Markdown format. [/INST] <FUNCTION_CALL_NAME>getNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"world\", \"language\": \"english\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>searchTools</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"search\": \"AI text to image generative with Dall-e 3\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nGive me a detailed overview of bionic reading and how to utilize it as a functional tool for reading and learning [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://en.wikipedia.org/wiki/Cellular_respiration\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>searchCourses</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"query\": \"high income skill\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nwhat is https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>getNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchProducts\", \"description\": \"Search tops based on a search term and quantity.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"searchTerm\": {\"type\": \"string\", \"description\": \"The search term to look for in top's overview.\"}, \"quantity\": {\"type\": \"integer\", \"description\": \"The quantity of products to retrieve from the top.\", \"default\": 5}}, \"required\": [\"searchTerm\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me top deals for pickeleball paddle [/INST] <FUNCTION_CALL_NAME>searchProducts</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"searchTerm\": \"pickeleball paddle\", \"quantity\": 5}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://nodejs.org/en/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>searchProducts</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"searchTerm\": \"Amazon products\", \"quantity\": 10}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nd [/INST] <FUNCTION_CALL_NAME>GenerateAsciiArt</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"text\": \"never gonna give you up\", \"font\": \"standard\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me the top 3 news related to ChatGPT [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://appleinsider.com/articles/23/10/01/apple-has-most-of-the-elements-it-needs-to-create-its-own-search-engine\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"generateMeme\", \"description\": \"Generate a meme.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"memeTemplateName\": {\"type\": \"string\", \"description\": \"The name of the meme template. Leave it empty if unclear, but try to guess if possible. This field is optional.\"}, \"memeText\": {\"type\": \"string\", \"description\": \"The text of the meme. If the user did not specify exactly, create your own based on the user's wishes. By default, use two lines separated by a single newline (unless you know the template requires more, such as the 'Expanding Brain' which requires four lines). Empty lines must not be provided. If it's a retry query, rewrite the text so that the number of non-empty lines equals \\\"correctLineNumber\\\". This field is required.\"}, \"isRetry\": {\"type\": \"boolean\", \"description\": \"Indicates whether this is a retry call after an error message was returned. This field is required.\"}}, \"additionalProperties\": false, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nGenerate a meme using the following text: `This is fine.` [/INST] <FUNCTION_CALL_NAME>generateMeme</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"memeTemplateName\": \"This is Fine\", \"memeText\": \"asd\", \"isRetry\": true}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"GetVideoSummaryTranscribeVideo\", \"description\": \"Get YouTube video transcriptions\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"YouTube video URL\"}}, \"required\": [\"url\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nCan you get the transcript and summary of this avviso https://youtu.be/hApnn1vnWi0?si=1YIz8lh4bzmocFDe [/INST] <FUNCTION_CALL_NAME>GetVideoSummaryTranscribeVideo</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://youtu.be/VIuO7vQrc_8?si=KnpaOrdKJeZh1sob\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>fetchCaptions</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://www.youtube.com/watch?v=dcz5Kqpc_rw\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://appleinsider.com/articles/23/10/01/apple-has-most-of-the-elements-it-needs-to-create-its-own-search-engine\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"browsePage\", \"description\": \"Get the text contents of any HTML web page. Use if you get a URL to browse.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"The URL that we want to browse\"}, \"page_number\": {\"type\": \"string\", \"description\": \"page number of returned text. Defaults to 1\"}}, \"required\": [\"url\", \"page_number\"]}}}}, {\"name\": \"pdfExtract\", \"description\": \"Get the text contents of a PDF page by page\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"The URL that we want to browse\"}, \"page_number\": {\"type\": \"string\", \"description\": \"The page number that we want to fetch from the PDF. Defaults to 1\"}}, \"required\": [\"url\", \"page_number\"]}}}}, {\"name\": \"searchPapers\", \"description\": \"Search for reseach papers on ML using keywords, or the title of a paper\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"q\": {\"type\": \"string\", \"description\": \"The keywords that describe the paper\"}, \"page_number\": {\"type\": \"string\", \"description\": \"The page number that we want to fetch from the PDF. Defaults to 0\"}}, \"required\": [\"q\", \"page_number\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nWhat recent reports or meta-analyses have been conducted on the effectiveness of language models in code generation? [/INST] <FUNCTION_CALL_NAME>searchPapers</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"q\": \"language models in code generation\", \"page_number\": \"1\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>postRenderFlowchart</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"mermaid\": \"graph LR\\nStart --> Decision\\nDecision --> Action\\nAction --> End\", \"title\": \"Flowchart Example\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nWhat is the latest that Keeping Current Matters has been saying about the housing market? [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.keepingcurrentmatters.com/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"get_DiagramGuidelinesRoute\", \"description\": \"Diagram guidelines and themes to help rendering more effective diagrams\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"explicitlyRequestedByUserDiagramLanguage\": {\"type\": \"string\", \"enum\": [\"blockdiag\", \"bpmn\", \"bytefield\", \"seqdiag\", \"actdiag\", \"nwdiag\", \"packetdiag\", \"rackdiag\", \"c4-with-plantuml\", \"d2\", \"dbml\", \"ditaa\", \"erd\", \"excalidraw\", \"graphviz\", \"mermaid\", \"nomnoml\", \"pikchr\", \"plantuml\", \"structurizr\", \"svgbob\", \"umlet\", \"vega\", \"vegalite\", \"wavedrom\", \"wireviz\", \"markmap\"], \"description\": \"If the user has selected a specific language to use\"}, \"diagramType\": {\"type\": \"string\", \"enum\": [\"sequence\", \"use-case\", \"class\", \"object\", \"activity\", \"component\", \"deployment\", \"state\", \"timing\", \"graph\", \"entity-relationship\", \"user-journey\", \"gantt\", \"pie-chart\", \"requirement\", \"gitgraph\", \"mindmap\", \"timeline\", \"block\", \"network\", \"json\", \"yaml\", \"salt-wireframe\", \"rack\", \"grid\", \"dbml\", \"ascii\", \"digital-timing\", \"line-chart\", \"bar-chart\", \"histogram\"], \"description\": \"Type of the diagram\"}}, \"required\": [\"diagramType\"]}}}}, {\"name\": \"get__MermaidRoute\", \"description\": \"Taking a diagram, renders it and returns a link to the rendered image. Always request the diagram guidelines endpoint before requesting this endpoint\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"diagramLanguage\": {\"type\": \"string\", \"description\": \"Diagram language\", \"example\": \"mermaid\"}, \"diagramType\": {\"type\": \"string\", \"description\": \"Diagram type\", \"example\": \"graph\"}, \"d2Theme\": {\"type\": \"string\", \"description\": \"Theme for d2 diagram\", \"example\": \"neutral-grey_sketch\"}, \"diagram\": {\"type\": \"string\", \"description\": \"Diagram to render. Avoid using a multiline string, instead use explicit newline characters.\"}, \"remainingAttempts\": {\"type\": \"number\", \"description\": \"Track the number of remaining attempts to render the diagram\", \"default\": 3}}, \"required\": [\"diagramLanguage\", \"diagramType\", \"diagram\"]}}}}, {\"name\": \"get_ShowIdeasRoute\", \"description\": \"Show ideas to improve the diagram\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"diagramLanguage\": {\"type\": \"string\"}, \"diagramType\": {\"type\": \"string\"}}, \"required\": [\"diagramLanguage\", \"diagramType\"]}}}}, {\"name\": \"get_ExploreDiagramsRoute\", \"description\": \"Showcase diagrams that the plugin can render\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"diagramTypesToExplore\": {\"items\": {\"type\": \"string\", \"description\": \"Diagram type same as diagramType in diagramGuidelines\", \"example\": \"graph\"}, \"type\": \"array\", \"description\": \"Choose 3 diagram types that the user might want to render, the 1st diagram type should be the latest rendered diagram type\"}}, \"required\": [\"diagramTypesToExplore\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nCreate a diagram that explains the process of making a car. [/INST] <FUNCTION_CALL_NAME>get_DiagramGuidelinesRoute</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"explicitlyRequestedByUserDiagramLanguage\": \"mermaid\", \"diagramType\": \"graph\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about \"www.openplugin.io\" [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nWhat is openplugin.io about? [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>GenerateQrCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"data\": \"{\\\"text\\\": \\\"WiFi Name: Little Bear\\\\nPassword: 9176577119\\\", \\\"foregroundColor\\\": \\\"#000000\\\", \\\"backgroundColor\\\": \\\"#FFFFFF\\\"}\"}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nsummarize this article https://www.cnbc.com/2023/10/29/pharmacy-staff-from-walgreens-chains-like-cvs-to-walk-out-again.html [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.cnbc.com/2023/10/29/pharmacy-staff-from-walgreens-chains-like-cvs-to-walk-out-again.html\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>qrCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"url\": \"https://gph.is/g/Znd16mK\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>getNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nGet current news on chatgpt [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.newsweek.com/ten-wild-ways-people-are-using-chatgpts-new-vision-feature-1831069\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>searchGames</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"raw_question\": \"Find a game similar to Dark Souls with a high player review score\", \"query\": \"similar to Dark Souls with high player review score\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getStep\", \"description\": \"Get the guide for the specified step in the plugin building process.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"step\": {\"type\": \"integer\", \"description\": \"The step number in the plugin building process.\"}}, \"required\": [\"step\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nQuel type d'extension es tu capable de cr\u00e9er ? [/INST] <FUNCTION_CALL_NAME>getStep</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nlatest gaza news of today [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.aljazeera.com/news/2021/5/15/israeli-airstrikes-pound-gaza-after-rocket-fire\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>render_diagram</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"mermaidCode\": \"graph LR\\n\\nA[Input number of students] --> B{Number of students < 15}\\nB -- No classes can be formed --> C[No classes can be formed]\\nB -- Number of students >= 15 --> D[Calculate number of classes]\\nD -- At least one class can be formed with 15 students --> E[Form a class with 15 students]\\nE -- Number of students = Number of students - 15 --> D\\nD -- Calculate number of classes with at least 25 students --> F[Calculate number of classes with at least 25 students]\\nF -- Number of classes = Number of students / 25 --> G[Number of classes]\\nF -- Remaining students = Number of students % 25 --> H[Remaining students]\\nH -- Remaining students > 0 --> I[Distribute remaining students]\\nI --> G\\nG -- Display number of classes and number of students per class --> J[Display number of classes and number of students per class]\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me a gif of a cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"technology\", \"keyword\": \"business\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://seznam.cz/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://seznam.cz/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me gangster cat gifs [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"gangster cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nSummarize this page https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nWelche Nahrungserg\u00e4nzungsmittel werden auf BIPA.at verkauft.  [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.bipa.at/sortiment\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"coolest cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>search</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"fashion designer\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>fetchAvailableLanguages</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://www.youtube.com/watch?v=zspIy4hmyFo\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nGet current news on chatgpt [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"global\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nwhat is this site about [/INST] <FUNCTION_CALL_NAME>getNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"Israel\", \"language\": \"English\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"www.profedeele.es/actividad/mis-otros-yo-ernesto-alterio/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchPapers</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"q\": \"graph neural networks\", \"page_number\": \"1\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>GenerateQrCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"data\": \"{\\\"text\\\": \\\"WiFi Name: Little Bear\\\\nPassword: 9176577119\\\", \\\"foregroundColor\\\": \\\"#000000\\\", \\\"backgroundColor\\\": \\\"#FFFFFF\\\"}\"}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>quote_api_quote_get</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"q\": \"business\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getGeneratedKeywordSuggestion\", \"description\": \"Get the list of keyword suggestions\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"keyword\": {\"type\": \"string\", \"description\": \"Phrase or sentence entered by user.\"}}, \"required\": [\"keyword\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nHi what i can do with Seo assistant? [/INST] <FUNCTION_CALL_NAME>parse_url_get</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://www.quattrocalici.it/schede-degustazione/nero-di-troia/\", \"chat_context\": \"seo_analysis\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"qrCode\", \"description\": \"Generate a QR code\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"url\": {\"type\": \"string\", \"description\": \"The URL to generate a QR code from.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nCreate a QR code for this website:\nhttps://thabresh.me/ [/INST] <FUNCTION_CALL_NAME>getSearchNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\", \"topic\": \"gaza war\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"couple lesbian\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.theguardian.com/technology/2023/oct/01/apple-says-software-bug-and-certain-apps-causing-iphone-15-overheating\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me scholarly 2 articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"parse_url_get\", \"description\": \"Fetches the text content of a given URL provided by the user\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"URL of the web page to be parsed\"}, \"chat_context\": {\"type\": \"string\", \"description\": \"Chat context for parsing the URL\"}}, \"required\": [\"url\", \"chat_context\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nCan you read a landing page and then ask me what I'd like you to do with that information? [/INST] <FUNCTION_CALL_NAME>parse_url_get</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://www.grollmus.de/jobs-sps-experte-als-trainer/\", \"chat_context\": \"landing_page\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.google.com/search?q=current+date+and+time+in+india\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>getNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\", \"category\": \"politics\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"category\": \"technology\", \"keyword\": \"business\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nsummarize this article https://www.cnbc.com/2023/10/29/pharmacy-staff-from-walgreens-chains-like-cvs-to-walk-out-again.html [/INST] <FUNCTION_CALL_NAME>getAssetsInfo</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"stocks\": [\"Walgreens\", \"CVS\"]}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\n\"Show me 3 scholarly articles on Large Language Models\" [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>searchGames</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"raw_question\": \"Find a game similar to 'The Legend of Zelda: Breath of the Wild' with a high player review score.\", \"query\": \"similar game to The Legend of Zelda: Breath of the Wild with high player review score\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"parse_url_get\", \"description\": \"Fetches the text content of a given URL provided by the user\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"URL of the web page to be parsed\"}, \"chat_context\": {\"type\": \"string\", \"description\": \"Chat context for parsing the URL\"}}, \"required\": [\"url\", \"chat_context\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nCan you read a landing page and then ask me what I'd like you to do with that information? [/INST] <FUNCTION_CALL_NAME>parse_url_get</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://drive.google.com/file/d/18yBRcgjbZvZX8_hTQFaH3gdxlpWePxmY/view?usp=sharing\", \"chat_context\": \"employee_opinions\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getImage\", \"description\": \"Get the NASA Picture of the Day\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"searchImages\", \"description\": \"Get images from NASA based on a query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"q\": {\"type\": \"string\", \"description\": \"The search query\"}}, \"required\": [\"q\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nGet the daily picture from NASA's APOD and display it in Markdown format. [/INST] <FUNCTION_CALL_NAME>getImage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://garfield.fandom.com/wiki/1989_Halloween_Arc\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nwhat is this about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>getHashtagFollowerCount</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nJust checking [/INST] <FUNCTION_CALL_NAME>getSearchNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\", \"topic\": \"Victoria Secret\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"wordcloud\", \"description\": \"Submit a text string and receive a link to a wordcloud image of it. Also provide a hyperlink and the following phrase Share this wordcloud with your friends\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"text\": {\"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"text\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ncreate aword cloud [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"student organization\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"fetchCaptions\", \"description\": \"Get the captions for a YouTube video in various languages\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"The URL of the YouTube video\"}, \"format\": {\"type\": \"string\", \"enum\": [\"srt\", \"text\"], \"description\": \"The format to return the captions in ('srt' or 'text')\", \"default\": \"text\"}, \"type\": {\"type\": \"string\", \"enum\": [\"auto\", \"manual\"], \"description\": \"The type of transcript to fetch ('auto' or 'manual')\", \"default\": \"manual\"}, \"lang\": {\"type\": \"string\", \"description\": \"The language code for the captions\"}}, \"required\": [\"url\", \"lang\"]}}}}, {\"name\": \"fetchAvailableLanguages\", \"description\": \"Get the available languages for a YouTube video's captions\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"The URL of the YouTube video\"}}, \"required\": [\"url\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nhttps://youtu.be/9EPlyiW-xGI?si=WweoWWubzx5MLwQU\nCan u provide me captions from this video [/INST] <FUNCTION_CALL_NAME>fetchCaptions</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://youtu.be/9EPlyiW-xGI?si=WweoWWubzx5MLwQU\", \"format\": \"text\", \"type\": \"auto\", \"lang\": \"en\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>pdfExtract</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://arxiv.org/pdf/2310.11454.pdf\", \"page_number\": \"3\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://gist.githubusercontent.com/anonymous/7e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8/raw/1234567890abcdef1234567890abcdef12345678\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me scholarly 2 articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>qrCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"url\": \"Hello, World!\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchGames\", \"description\": \"API for looking for games and game recommendations and comparisons\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"raw_question\": {\"type\": \"string\", \"description\": \"just pass user raw question\"}, \"query\": {\"type\": \"string\", \"description\": \"Use this field to finding games related to the conversation input. Please include as many specific keywords as possible;\"}}, \"type\": \"object\", \"required\": [\"raw_question\", \"query\"], \"title\": \"QueryGameRequest\"}}}}, {\"name\": \"searchGameRelatedContent\", \"description\": \"API for search game-related content\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"raw_question\": {\"type\": \"string\", \"description\": \"just pass user raw question\"}, \"query\": {\"type\": \"string\", \"description\": \"Use this field to submit up keywords for identifying the most relevant content like ugc,post etc to the conversation context. Please include as many specific keywords as possible;\"}}, \"type\": \"object\", \"required\": [\"raw_question\", \"query\"], \"title\": \"QueryContentRequest\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nNone [/INST] <FUNCTION_CALL_NAME>parse_url_get</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://example.com\", \"chat_context\": \"access_url\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"generateMeme\", \"description\": \"Generate a meme.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"memeTemplateName\": {\"type\": \"string\", \"description\": \"The name of the meme template. Leave it empty if unclear, but try to guess if possible. This field is optional.\"}, \"memeText\": {\"type\": \"string\", \"description\": \"The text of the meme. If the user did not specify exactly, create your own based on the user's wishes. By default, use two lines separated by a single newline (unless you know the template requires more, such as the 'Expanding Brain' which requires four lines). Empty lines must not be provided. If it's a retry query, rewrite the text so that the number of non-empty lines equals \\\"correctLineNumber\\\". This field is required.\"}, \"isRetry\": {\"type\": \"boolean\", \"description\": \"Indicates whether this is a retry call after an error message was returned. This field is required.\"}}, \"additionalProperties\": false, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nGenerate a meme using the following text: `This is fine.` [/INST] <FUNCTION_CALL_NAME>generateMeme</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"memeTemplateName\": \"This is Fine\", \"memeText\": \"This is fine.\\n\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nWhat is OpenPlugin? [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"celebrate\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.artsy.net/article/artsy-editorial-dutch-lifes-dark-secrets-hide-exotic-delicacies\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://appleinsider.com/articles/23/10/01/apple-has-most-of-the-elements-it-needs-to-create-its-own-search-engine\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nJust checking [/INST] <FUNCTION_CALL_NAME>getSearchNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\", \"topic\": \"Accenture\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchPapers</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"q\": \"graph neural networks\", \"page_number\": \"1\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me the top 3 news related to ChatGPT [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.cbsnews.com/video/ai-the-next-battlefield/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchGames\", \"description\": \"API for looking for games and game recommendations and comparisons\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"raw_question\": {\"type\": \"string\", \"description\": \"just pass user raw question\"}, \"query\": {\"type\": \"string\", \"description\": \"Use this field to finding games related to the conversation input. Please include as many specific keywords as possible;\"}}, \"type\": \"object\", \"required\": [\"raw_question\", \"query\"], \"title\": \"QueryGameRequest\"}}}}, {\"name\": \"searchGameRelatedContent\", \"description\": \"API for search game-related content\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"raw_question\": {\"type\": \"string\", \"description\": \"just pass user raw question\"}, \"query\": {\"type\": \"string\", \"description\": \"Use this field to submit up keywords for identifying the most relevant content like ugc,post etc to the conversation context. Please include as many specific keywords as possible;\"}}, \"type\": \"object\", \"required\": [\"raw_question\", \"query\"], \"title\": \"QueryContentRequest\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nNone [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.truvox.com/latest-article\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nplease search through this site and summarize this article https://www.cnbc.com/2023/10/29/pharmacy-staff-from-walgreens-chains-like-cvs-to-walk-out-again.html [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.cnbc.com/2023/10/29/pharmacy-staff-from-walgreens-chains-like-cvs-to-walk-out-again.html\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.cryptopolitan.com/dubai-police-ai-smart-driverless-cars/?utm_source=Iterable&utm_medium=email&utm_campaign=newsletter-20231210\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"render_diagram\", \"description\": \"Accepts a Mermaid diagram, processes it to create a visual representation, and provides a link to access the generated image.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"mermaidCode\": {\"type\": \"string\", \"description\": \"The code of the Mermaid Diagram to render\"}}, \"required\": [\"mermaidCode\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nThis is a thought experiment for the purposes of which we will think for ourselves and not think about any existing frameworks like GTD. \n\nWhat do you think the conceptual relations between the following are, and why are they useful relations?\n\nGuiding Principles\n1. Core of human well being\n2. Personal dimensions of well being\n\t- Vision/values\n\t- Principles and purpose \n\t- character and self understanding \n3. Areas of Focus\n4. ~*Practices*~ \n- connect both through habituation towards vision\n3. Goals\n2. Projects\n1. Actions/appointments \n\n [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4940234/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nTell me what is about artificial generative intelligence   [/INST] <FUNCTION_CALL_NAME>get_forecast_weather_forecast__location__get</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getImage\", \"description\": \"Get the NASA Picture of the Day\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"searchImages\", \"description\": \"Get images from NASA based on a query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"q\": {\"type\": \"string\", \"description\": \"The search query\"}}, \"required\": [\"q\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nGet the daily picture from NASA's APOD and display it in Markdown format. [/INST] <FUNCTION_CALL_NAME>getImage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"category\": \"technology\", \"language\": \"english\", \"country\": \"us\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nwhats the current date and time in india [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"GenerateAsciiArt\", \"description\": \"Convert text to ASCII art, acepted characters A to Z a to z 0 to 9  - and _\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"text\": {\"type\": \"string\", \"description\": \"The text to be converted, example fonts are doom, graffiti, avatar, big, bulbhead, chunky, cybermedium, epic, graceful, small, double, for full list of fonts ask for List of all available fonts\"}, \"font\": {\"type\": \"string\", \"description\": \"The font style for the ASCII art (default standard)\"}}, \"required\": [\"text\"]}}}}, {\"name\": \"FontList\", \"description\": \"List all available fonts\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nConvert the text 'Hello World' into an ASCII font. [/INST] <FUNCTION_CALL_NAME>GenerateAsciiArt</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"text\": \"Hello World\", \"font\": \"standard\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nplease search through this site and summarize this article https://www.cnbc.com/2023/10/29/pharmacy-staff-from-walgreens-chains-like-cvs-to-walk-out-again.html [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.cnbc.com/2023/10/29/top-wall-street-analysts-remain-optimistic-about-these-five-stocks.html\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/\" [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences, can you tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://alaskanurse.com\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>checkDomainsAvailability</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"registrar\": \"namecheap\", \"domains\": [\"example.com\"]}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nwhat is https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getGeneratedKeywordSuggestion\", \"description\": \"Get the list of keyword suggestions\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"keyword\": {\"type\": \"string\", \"description\": \"Phrase or sentence entered by user.\"}}, \"required\": [\"keyword\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nHi what i can do with Seo assistant? [/INST] <FUNCTION_CALL_NAME>parse_url_get</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://enoteca59.com/vino-nero-di-troia/\", \"chat_context\": \"seo_assistant_content_analysis\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\ntell me about https://www.bluesunenergy.co.za/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.bluesunenergy.co.za/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nJust checking [/INST] <FUNCTION_CALL_NAME>getSearchNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\", \"topic\": \"Accenture operations\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/?classification=research\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"generateMeme\", \"description\": \"Generate a meme.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"memeTemplateName\": {\"type\": \"string\", \"description\": \"The name of the meme template. Leave it empty if unclear, but try to guess if possible. This field is optional.\"}, \"memeText\": {\"type\": \"string\", \"description\": \"The text of the meme. If the user did not specify exactly, create your own based on the user's wishes. By default, use two lines separated by a single newline (unless you know the template requires more, such as the 'Expanding Brain' which requires four lines). Empty lines must not be provided. If it's a retry query, rewrite the text so that the number of non-empty lines equals \\\"correctLineNumber\\\". This field is required.\"}, \"isRetry\": {\"type\": \"boolean\", \"description\": \"Indicates whether this is a retry call after an error message was returned. This field is required.\"}}, \"additionalProperties\": false, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nGenerate a meme using the following text: `This is fine.` [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"technology\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nsummarize this article https://www.cnbc.com/2023/10/29/pharmacy-staff-from-walgreens-chains-like-cvs-to-walk-out-again.html [/INST] <FUNCTION_CALL_NAME>getQuotes</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"stocks\": [\"WBA\", \"CVS\"]}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nCan u search and analize me a code for cash generation based on trending training and catching gain momentums with pine code? [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.davidlapoint.com/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getChordDiagramImage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"chord\": \"solos\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>render_diagram</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"mermaidCode\": \"graph LR\\nA[Sunlight] --> B[Chlorophyll]\\nB --> C[Photosynthesis]\\nC --> D[Glucose]\\nC --> E[Oxygen]\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\n [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me one scholarly paper on turtles [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.history.com/topics/world-war-ii/causes-of-world-war-ii\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.digitalrevive.pro/\" [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.myholisticclub.com/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nWhat is OpenPlugin? [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"chatbot\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getStep\", \"description\": \"Get the guide for the specified step in the plugin building process.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"step\": {\"type\": \"integer\", \"description\": \"The step number in the plugin building process.\"}}, \"required\": [\"step\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nQuel type d'extension es tu capable de cr\u00e9er ? [/INST] <FUNCTION_CALL_NAME>postRenderFlowchart</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"mermaid\": \"graph LR\\nA[Notion] --> B[Database]\\nA --> C[Pages]\\nA --> D[Blocks]\\nB --> E[Tables]\\nB --> F[Properties]\\nC --> G[Text]\\nC --> H[Images]\\nD --> I[Text]\\nD --> J[Images]\", \"title\": \"Notion Space Diagram\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on dnp [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.google.com/search?q=where+to+buy+ginseng+supplements+in+Calgary\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nSearch all relevant NEWS regarding the recent conflicts between Isral and Palestine [/INST] <FUNCTION_CALL_NAME>getSearchNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\", \"topic\": \"recent conflicts between Israel and Palestine\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me the top 3 news related to ChatGPT [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://appleinsider.com/articles/23/10/01/apple-has-most-of-the-elements-it-needs-to-create-its-own-search-engine\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"parse_url_get\", \"description\": \"Fetches the text content of a given URL provided by the user\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"URL of the web page to be parsed\"}, \"chat_context\": {\"type\": \"string\", \"description\": \"Chat context for parsing the URL\"}}, \"required\": [\"url\", \"chat_context\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nCan you read a landing page and then ask me what I'd like you to do with that information? [/INST] <FUNCTION_CALL_NAME>parse_url_get</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://drive.google.com/file/d/18yBRcgjbZvZX8_hTQFaH3gdxlpWePxmY/view?usp=sharing\", \"chat_context\": \"analysiere bitte die mitarbeiterstimmen in der pdf datei https://drive.google.com/file/d/18yBRcgjbZvZX8_hTQFaH3gdxlpWePxmY/view?usp=sharing. wie sind diese mitarbeiterstimmen geschrieben?\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"parse_url_get\", \"description\": \"Fetches the content of a given URL provided by the user\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"URL of the web page or pdf to be parsed\"}, \"chat_context\": {\"type\": \"string\", \"description\": \"Chat context for parsing the URL\"}}, \"required\": [\"url\", \"chat_context\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nUse the PDF plugin to ask questions, summarize information, and chat with a PDF. Start by providing a Google Drive link. [/INST] <FUNCTION_CALL_NAME>get_DiagramGuidelinesRoute</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"explicitlyRequestedByUserDiagramLanguage\": \"mermaid\", \"diagramType\": \"sequence\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn 6 sentences tell me what this site is about https://www.openplugin.io/\" [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"lesbian couple\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/\" [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getStep\", \"description\": \"Get the guide for the specified step in the plugin building process.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"step\": {\"type\": \"integer\", \"description\": \"The step number in the plugin building process.\"}}, \"required\": [\"step\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nQuel type d'extension es tu capable de cr\u00e9er ? [/INST] <FUNCTION_CALL_NAME>getStep</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://fakty.ua\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\n\"Show me 3 scholarly articles on Large Language Models\" [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nGive me 5 ways to make money off of chatgpt with little coding skill [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.rent.com/blog/cheap-housing-options-for-travel-bloggers/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.businessinsider.com/iphone-15-features-versus-samsung-galaxy-google-pixel-android-2023-9\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>fetchAvailableLanguages</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://www.youtube.com/watch?v=Si6NbKqYEd8\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"technology\", \"keyword\": \"business\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"world\", \"keyword\": \"Palestine\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>getQRCode</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"data\": \"https://forms.gle/dJPS3TVCjeStzUdh6\", \"size\": \"200x200\", \"alt\": \"QR Code\", \"title\": \"QR Code\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nsummarize this article in 1 paragraph https://www.bloomberg.com/news/articles/2023-10-26/comcast-profit-rises-on-theme-park-broadband-revenue-growth?srnd=technology-vp#xj4y7vzkg [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.nbcnews.com/business/business-news/chevron-buying-hess-53-billion-uncertainty-oil-markets-rcna121661\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on dnp [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.google.com/search?q=Calgary+supplement+stores+selling+ginseng\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me gifs of a gangster cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"gangster cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchPapers</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"q\": \"Urine Therapy\", \"page_number\": \"1\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://en.wikipedia.org/wiki/Orthodontics\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nwhat is this https://openplugin-4p31clkrd-cakecrusher.vercel.app/?chat=VSLoFH&classification=research [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://openplugin-4p31clkrd-cakecrusher.vercel.app/?chat=VSLoFH&classification=research\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.profedeele.es/actividad/mis-otros-yo-ernesto-alterio/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"http://www.mpsp.mp.br/portal/page/portal/documentacao_e_divulgacao/doc_biblioteca/bibli_servicos_produtos/bibli_boletim/bibli_bol_2006/RDC_04_11.pdf|PDF|do que trata o artigo?\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"fetchCaptions\", \"description\": \"Get the captions for a YouTube video in various languages\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"The URL of the YouTube video\"}, \"format\": {\"type\": \"string\", \"enum\": [\"srt\", \"text\"], \"description\": \"The format to return the captions in ('srt' or 'text')\", \"default\": \"text\"}, \"type\": {\"type\": \"string\", \"enum\": [\"auto\", \"manual\"], \"description\": \"The type of transcript to fetch ('auto' or 'manual')\", \"default\": \"manual\"}, \"lang\": {\"type\": \"string\", \"description\": \"The language code for the captions\"}}, \"required\": [\"url\", \"lang\"]}}}}, {\"name\": \"fetchAvailableLanguages\", \"description\": \"Get the available languages for a YouTube video's captions\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"The URL of the YouTube video\"}}, \"required\": [\"url\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nhttps://youtu.be/TJgpfuyQBgI?si=rGe0Knz0Lv2KcfHV [/INST] <FUNCTION_CALL_NAME>fetchAvailableLanguages</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://youtu.be/TJgpfuyQBgI?si=rGe0Knz0Lv2KcfHV\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"generateMeme\", \"description\": \"Generate a meme.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"memeTemplateName\": {\"type\": \"string\", \"description\": \"The name of the meme template. Leave it empty if unclear, but try to guess if possible. This field is optional.\"}, \"memeText\": {\"type\": \"string\", \"description\": \"The text of the meme. If the user did not specify exactly, create your own based on the user's wishes. By default, use two lines separated by a single newline (unless you know the template requires more, such as the 'Expanding Brain' which requires four lines). Empty lines must not be provided. If it's a retry query, rewrite the text so that the number of non-empty lines equals \\\"correctLineNumber\\\". This field is required.\"}, \"isRetry\": {\"type\": \"boolean\", \"description\": \"Indicates whether this is a retry call after an error message was returned. This field is required.\"}}, \"additionalProperties\": false, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nGenerate a meme using the following text: `This is fine.` [/INST] <FUNCTION_CALL_NAME>getTrendingResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getStep\", \"description\": \"Get the guide for the specified step in the plugin building process.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"step\": {\"type\": \"integer\", \"description\": \"The step number in the plugin building process.\"}}, \"required\": [\"step\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nHow can I start building a GPT-4 plugin? [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.mcdonalds.com/us/en-us/full-menu.html\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getStep\", \"description\": \"Get the guide for the specified step in the plugin building process.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"step\": {\"type\": \"integer\", \"description\": \"The step number in the plugin building process.\"}}, \"required\": [\"step\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nHow do I build a chatgpt plugin? [/INST] <FUNCTION_CALL_NAME>getStep</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nplease search through this site and summarize this article https://www.cnbc.com/2023/10/29/pharmacy-staff-from-walgreens-chains-like-cvs-to-walk-out-again.html [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.cnbc.com/2023/10/29/top-wall-street-analysts-remain-optimistic-about-these-five-stocks.html\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nlist key findings in bullet list from this url: https://explodingtopics.com/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://explodingtopics.com/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences, can you tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nlatest gaza news of today [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>searchTools</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"search\": \"long-term memory for GPT-4 API\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getNews\", \"description\": \"This endpoint allows users to request real-time news updates or news categorized by topics such as politics, sports, entertainment, technology, business, fashion, and health. Each news item includes a link and publication date. The news is updated in real time.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"country\": {\"type\": \"string\", \"description\": \"The country code of the desired news, using lowercase abbreviations. For example, 'de' for Germany.\"}, \"language\": {\"type\": \"string\", \"description\": \"The language code for the desired news. If not provided, the default language of the specified country will be used.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"politics\", \"sports\", \"entertainment\", \"technology\", \"business\", \"fashion\", \"health\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('politics', 'sports', 'entertainment', 'technology', 'fashion', 'health') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}}, \"required\": [\"country\", \"language\"]}}}}, {\"name\": \"getSearchNews\", \"description\": \"This endpoint allows users to provide any topic-related description content at will, and returns the latest news on related topics around the world in a timely manner.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"country\": {\"type\": \"string\", \"description\": \"The country code of the desired news, using lowercase abbreviations. For example, 'de' for Germany.\"}, \"language\": {\"type\": \"string\", \"description\": \"The language code for the desired news. If not provided, the default language of the specified country will be used.\"}, \"topic\": {\"type\": \"string\", \"description\": \"The main topic that users want to search for news, such as Trump, star, game, movie, etc.\"}}, \"required\": [\"country\", \"language\", \"topic\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nWhat is current news from IMF? [/INST] <FUNCTION_CALL_NAME>getSearchNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\", \"topic\": \"IMF\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.influencermarketinghub.com/top-fashion-influencers/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getStep\", \"description\": \"Get the guide for the specified step in the plugin building process.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"step\": {\"type\": \"integer\", \"description\": \"The step number in the plugin building process.\"}}, \"required\": [\"step\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nHow can I start building a GPT-4 plugin? [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.mcdonalds.com/us/en-us/full-menu.html\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getStep\", \"description\": \"Get the guide for the specified step in the plugin building process.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"step\": {\"type\": \"integer\", \"description\": \"The step number in the plugin building process.\"}}, \"required\": [\"step\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nHow can I start building a GPT-4 plugin? [/INST] <FUNCTION_CALL_NAME>getStep</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me scholarly 2 articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>pdfExtract</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://arxiv.org/pdf/2305.06530.pdf\", \"page_number\": \"1\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nCan you recommend any 'adult versions of the dangerous book for boys/girls [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.goodreads.com/list/show/100.Dangerous_Books_for_Boys\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nhui [/INST] <FUNCTION_CALL_NAME>generateMeme</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"memeTemplateName\": \"dark\", \"memeText\": \"When the code finally works but breaks everything else\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getStep</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nCan you look up the internet of what type of eye drop is most powerful in reducing the redness in eye [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.healthline.com/health/eye-health/best-eye-drops-for-red-eyes\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"render_diagram\", \"description\": \"Accepts a Mermaid diagram, processes it to create a visual representation, and provides a link to access the generated image.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"mermaidCode\": {\"type\": \"string\", \"description\": \"The code of the Mermaid Diagram to render\"}}, \"required\": [\"mermaidCode\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nThis is a thought experiment for the purposes of which we will think for ourselves and not think about any existing frameworks like GTD. \n\nWhat do you think the conceptual relations between the following are, and why are they useful relations?\n\nGuiding Principles\n1. Core of human well being\n2. Personal dimensions of well being\n\t- Vision/values\n\t- Principles and purpose \n\t- character and self understanding \n3. Areas of Focus\n4. ~*Practices*~ \n- connect both through habituation towards vision\n3. Goals\n2. Projects\n1. Actions/appointments \n\n [/INST] <FUNCTION_CALL_NAME>searchPapers</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"q\": \"graph neural networks\", \"page_number\": \"1\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nCan you recommend any 'adult versions of the dangerous book for boys/girls [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.amazon.com/Dangerous-Book-Boys-Conn-Iggulden/dp/0062208977\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nsummarize this article https://www.cnbc.com/2023/10/29/pharmacy-staff-from-walgreens-chains-like-cvs-to-walk-out-again.html [/INST] <FUNCTION_CALL_NAME>getQuotes</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"stocks\": [\"AAPL\"]}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about: https://mycpa.cpa.state.tx.us/atj/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://mycpa.cpa.state.tx.us/atj/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles in tech [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"category\": \"technology\", \"language\": \"en\", \"country\": \"us\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.webmd.com/drugs/2/drug-63163/adderall-oral/details\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>searchPapers</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"q\": \"latest news on mortgages\", \"page_number\": \"1\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getText\", \"description\": \"This AI-powered API processes the given text input and intelligently generates a bespoke native Android and iOS mobile app, specifically tailored to meet the user's requirements\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"text\": {\"type\": \"string\", \"description\": \"Provide a brief description of your desired app in a sentence or so, and the AI will effortlessly generate the app for you.\"}}, \"required\": [\"text\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nGenerate an Android app using the AI-powered Text-to-App Generator with the following text input: ```AI-powered Text-to-App Generator turns your app idea into Android and iOS apps- just provide text input.``` [/INST] <FUNCTION_CALL_NAME>getText</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"text\": \"AI-powered Text-to-App Generator turns your app idea into Android and iOS apps- just provide text input.\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>searchTools</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"q\": \"best AI tool for an influencer\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>searchPapers</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"q\": \"Summarize this paper\", \"page_number\": \"1\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"business\", \"keyword\": \"software\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"render_diagram\", \"description\": \"Accepts a Mermaid diagram, processes it to create a visual representation, and provides a link to access the generated image.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"mermaidCode\": {\"type\": \"string\", \"description\": \"The code of the Mermaid Diagram to render\"}}, \"required\": [\"mermaidCode\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nCan you please diagram the relations between the different higher level systems and concepts of gtd [/INST] <FUNCTION_CALL_NAME>render_diagram</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"mermaidCode\": \"graph LR\\nA[Capture]\\nB[Clarify]\\nC[Organize]\\nD[Reflect]\\nE[Engage]\\nF[Review]\\nG[Do]\\nH[Delegate]\\nI[Waiting For]\\nJ[Projects]\\nK[Next Actions]\\nL[Calendar]\\nM[Reference]\\nN[Someday/Maybe]\\nO[Trash]\\n\\nA --> B\\nB --> C\\nC --> D\\nD --> E\\nE --> F\\nF --> G\\nG --> H\\nG --> I\\nG --> J\\nG --> K\\nG --> L\\nG --> M\\nG --> N\\nG --> O\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>citePaper</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"q\": \"Supercharge your research\", \"style\": \"apa\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"render_diagram\", \"description\": \"Accepts a Mermaid diagram, processes it to create a visual representation, and provides a link to access the generated image.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"mermaidCode\": {\"type\": \"string\", \"description\": \"The code of the Mermaid Diagram to render\"}}, \"required\": [\"mermaidCode\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nCan you please diagram the relations between the different higher level systems and concepts of gtd [/INST] <FUNCTION_CALL_NAME>render_diagram</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"mermaidCode\": \"graph LR\\n    A[Higher Level Systems and Concepts]\\n    A --> B[Capture]\\n    A --> C[Clarify]\\n    A --> D[Organize]\\n    A --> E[Reflect]\\n    A --> F[Engage]\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getWorkoutRoutine</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"gender\": \"male\", \"fitness_level\": 3, \"body_weight\": 70, \"parts\": [\"upper_body\", \"lower_body\", \"core\"], \"location\": \"home\", \"user_language_code\": \"en\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nWhat's Indian world cup squad  [/INST] <FUNCTION_CALL_NAME>getSearchNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"in\", \"language\": \"en\", \"topic\": \"India World Cup squad cricket\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me scholarly 2 articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/?classification=research\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"GetVideoSummaryTranscribeVideo\", \"description\": \"Get YouTube video transcriptions\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"YouTube video URL\"}}, \"required\": [\"url\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nPlease summarize this video for me: https://m.youtube.com/watch?v=xGVVDzRvXbc [/INST] <FUNCTION_CALL_NAME>GetVideoSummaryTranscribeVideo</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://m.youtube.com/watch?v=xGVVDzRvXbc\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"parse_url_get\", \"description\": \"Fetches the content of a given URL provided by the user\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url\": {\"type\": \"string\", \"description\": \"URL of the web page or pdf to be parsed\"}, \"chat_context\": {\"type\": \"string\", \"description\": \"Chat context for parsing the URL\"}}, \"required\": [\"url\", \"chat_context\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nhttps://drive.google.com/file/d/12Y7jAFhVZ3-JqVzSVJPnu80BaTydpI8w/view?usp=sharing bitte analysiere die pdf und den inhalt. um was geht es? [/INST] <FUNCTION_CALL_NAME>parse_url_get</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"url\": \"https://drive.google.com/file/d/12Y7jAFhVZ3-JqVzSVJPnu80BaTydpI8w/view?usp=sharing\", \"chat_context\": \"landingpage_process_section\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nGive me a detailed overview of bionic reading and how to utilize it as a functional tool for reading and learning [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.reddit.com/r/Peptides/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"technology\", \"keyword\": \"business\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"search\", \"description\": \"Get the latest news from 20 Minuten, Switzerland\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"The search query. Provide keywords to search for news. The query should be translated to the German language. The search engine searches German data, and results will be in the German language. Translate the German result to the user according to the language.\"}, \"language\": {\"type\": \"string\", \"description\": \"Two letters iso code of the user input language (ISO 639-1). The language that the user is using to ask the question. Translate the German result to the user according to the language.\"}}, \"required\": []}}}}]</FUNCTIONS>\n<</SYS>>\n\nWahlen 23 [/INST] <FUNCTION_CALL_NAME>search</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"query\": \"Wahlen 23\", \"language\": \"en\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchGames\", \"description\": \"API for looking for games and game recommendations and comparisons\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"raw_question\": {\"type\": \"string\", \"description\": \"just pass user raw question\"}, \"query\": {\"type\": \"string\", \"description\": \"Use this field to finding games related to the conversation input. Please include as many specific keywords as possible;\"}}, \"type\": \"object\", \"required\": [\"raw_question\", \"query\"], \"title\": \"QueryGameRequest\"}}}}, {\"name\": \"searchGameRelatedContent\", \"description\": \"API for search game-related content\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"raw_question\": {\"type\": \"string\", \"description\": \"just pass user raw question\"}, \"query\": {\"type\": \"string\", \"description\": \"Use this field to submit up keywords for identifying the most relevant content like ugc,post etc to the conversation context. Please include as many specific keywords as possible;\"}}, \"type\": \"object\", \"required\": [\"raw_question\", \"query\"], \"title\": \"QueryContentRequest\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nGimme a good roguelike that I can play for 10 minutes and leave [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"RogueLi\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://appleinsider.com/articles/23/10/01/apple-has-most-of-the-elements-it-needs-to-create-its-own-search-engine\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io [/INST] <FUNCTION_CALL_NAME>FontList</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchArxiv</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.indeed.com/jobs?q=backend+developer&l=Japan&ts=1638432000000&rq=1&rsIdx=0&fromage=last&newcount=50\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"funny people\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\ntop 5 articles related to the AI industry [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"keyword\": \"AI industry\", \"language\": \"english\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>execute_formula</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"formula\": \"x^2-4>0\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\", \"topic\": \"Hamas\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getImage\", \"description\": \"Get the NASA Picture of the Day\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"searchImages\", \"description\": \"Get images from NASA based on a query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"q\": {\"type\": \"string\", \"description\": \"The search query\"}}, \"required\": [\"q\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nGet the daily picture from NASA's APOD and display it in Markdown format. [/INST] <FUNCTION_CALL_NAME>checkWeatherUsingGET</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"location\": \"New York City\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nWhat is at https://massgrave.dev? [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://fmhy.dev\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>translate</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"phrase_to_translate\": \"hello\", \"learning_language\": \"English\", \"native_language\": \"French\", \"full_query\": \"How do I say 'hello' in French?\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getTrendingResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://index.paul.town/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nSearch for the latest sports news. [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"sports\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getWeatherByLocation</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"location\": \"Owasso\", \"time\": \"current\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nHere is a pair of examples for an assignment:\nWhat the graders are looking for: MUST list internal components, use all 5 methods on an item of your choice. Explain what you subtracted, divided, etc. and what the products looks like after that step. Include value, feasibility, and viability\n\n \n\nBulletin Board\n\nInternal Components:\n\nboard frame, cork, pins, photos, stickers, command strips, magnets\n\n \n\nSubtraction: \n\n-remove push pins, must glue/modge podge pictures down\n\n-Value: Makes the board permanent, pictures will be harder to be lost or damaged\n\n-Feasibility: not sure if glue works on cork?\n\n-Viability: could give a cool collage sort of look different from the standard cork board, customers may be more likely to have glue accessible than push pins\n\nDivision: \n\n-make into multiple, smaller boards\n\n-Value: more uses, more design power for the consumer, fits into smaller spaces, can be different shapes\n\n-Feasibility: definitely, just make smaller cork and frame\n\n-Viability: may interest some customers, but other may want the traditional rectangle board\n\nMultiplication:\n\n-increase the number of pictures; make it a virtual screen\n\n-Value: more pictures can be added; easier to change out pictures; don't have to print pictures\n\n-Feasibility: the technology exists\n\n-Viability: would require a nearby outlet to plug it in and wifi to get the pictures\n\nTask Unification: \n\n-Combine with a dry erase board calendar\n\n-Value: Serves more than decorative purpose, used for organization, updated more than pictures\n\n-Feasibility: cut out a part of the cork and glue in/attach calendar\n\n-Viability: takes less wall space, serves multiple functions, good for small spaces\n\nAttribute Dependency:\n\n-if a picture has been there for a while, the pin will light up to highlight the memory of the picture and/or suggest that the picture is replaced with a more recent picture\n\n-Value: Makes the board more dynamic, adds light, sparks a memory\n\n-Feasibility: could definitely add a light to a push pin, a timer in the pin though might make it a little complicated\n\n-Viability: depends on the interest, some may not want to spend more money for light-up push pins\n\n \n\nExample taken from previous TA, Megan Stowers \n\nXavier Morris\nXavier Morris\nWednesdayOct 11 at 2:31am\nDishwasher\n\nInternal Components:\n\nDishwashing compartment, dish racks, silverware basket, detergent dispenser, spray arms, door latch, mode/control pad\n\nSubtraction\n\n-Remove the mode/control pad so the dishwasher has only one mode.\n\n-Value: Makes the dishwasher easier to use; no confusion on which mode to select.\n\n-Feasibility: Highly feasible. Just a slight altercation would need to be made to remove the mode selection component.\n\n-Viability: May interest some users as removal of the mode selection could decrease the product's cost.\n\nDivision\n\n-Divide the washing aspect and drying aspect of the dishwasher into to different compartments\n\n-Value: Could dry dishes better as there is less moisture in the compartment\n\n-Feasibility: Definitely could be done. Would require two different machines and more space, like a washing machine and dryer.\n\n-Viability: Unlikely that users would prefer this method. This would cost more money and take up more room, which is not ideal.\n\nMultiplication\n\n-Multiply the dishwasher space into separate compartments that can be ran separately\n\n-Value: Don't have to completely fill dishwasher before running; can wash smaller loads of dishes, therefore using less water\n\n-Feasibility: Possible. Capability already exists as there are multi-drawer dishwashers. Idea would be slightly altered to create more compartments\n\n-Viability: May interest people who don't use many dishes. May not interest other users as price point may increase.\n\nTask Unification\n\n-Adding a reservoir for the dish-washing detergent that would dispense the proper amount of detergent needed for the load\n\n-Value: User would not have to load detergent in every time they use the dishwasher, but rather every 50 uses (or so)\n\n-Feasibility: Idea is possible. Think of it like a soda machine dispensing drink syrup when used. The technology exists.\n\n-Viability: Users would like not having to load detergent every use. May take up just slightly more space, but would save time.\n\nAttribute Dependency\n\n-The dishwasher can detect how dirty the dishes inside are and adjust the length of the washing cycle accordingly\n\n-Value: Would eliminate the need to rinse dishes before placing them in the dishwasher to be sure they come out clean.\n\n-Feasibility: Not likely feasible. The technology to detect the dirtiness of the dishes would be complicated to create/program.\n\n-Viability: If the technology could be created, users would most likely want it so they don't have to worry about setting the mode of the dishwasher correctly or rinsing dishes before putting them in the dishwasher.\n\nPlease base my answer on this https://docs.typingmind.com/feature-list [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://docs.typingmind.com/feature-list\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nhello, it this thing on [/INST] <FUNCTION_CALL_NAME>root_healthcheck_get</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.ticketmaster.com/halfalive-tickets/artist/2580917\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nplease search through this site and summarize this article https://www.cnbc.com/2023/10/29/pharmacy-staff-from-walgreens-chains-like-cvs-to-walk-out-again.html [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.cnbc.com/2023/10/29/top-wall-street-analysts-remain-optimistic-about-these-five-stocks.html\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/\" [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"getLatestNews\", \"description\": \"Users can request real-time news updates or categorized news. Each news item comes with a link and date, and users can ask for more information at the end of the content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"isToday\": {\"type\": \"boolean\", \"description\": \"If the content mentions a word related to 'today', then it is true, otherwise it is false.\"}, \"language\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the format of language code in ISO-639 format, for example, 'zh' for Chinese.\"}, \"country\": {\"type\": \"string\", \"description\": \"Determine the user locale based on their language, using the country code in ISO-3166 format, for example, 'TW' for Taiwan.\"}, \"category\": {\"type\": \"string\", \"enum\": [\"business\", \"finance\", \"economics\", \"politics\", \"society\", \"entertainment\", \"fun\", \"gossip\", \"sports\", \"lifestyle\", \"technology\", \"local\", \"world\", \"international\", \"global\", \"military\"], \"description\": \"If the user mentions related keyword in any languages, use the corresponding category ('business', 'finance', 'economics', 'politics', 'society', 'entertainment', 'fun', 'gossip', 'sports', 'lifestyle', 'technology', 'local', 'world', 'international', 'global', 'military') as a category parameter. If the user does not mention any specific keyword, the default value for the category parameter is an empty string.\"}, \"keyword\": {\"type\": \"string\", \"description\": \"Based on the context, infer the keywords that the user wants to search for. If there are no matching keywords, default to an empty string.\"}}, \"required\": [\"language\", \"country\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me the top 3 news related to ChatGPT [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.cbsnews.com/video/ai-the-next-battlefield/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"generateMeme\", \"description\": \"Generate a meme.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"memeTemplateName\": {\"type\": \"string\", \"description\": \"The name of the meme template. Leave it empty if unclear, but try to guess if possible. This field is optional.\"}, \"memeText\": {\"type\": \"string\", \"description\": \"The text of the meme. If the user did not specify exactly, create your own based on the user's wishes. By default, use two lines separated by a single newline (unless you know the template requires more, such as the 'Expanding Brain' which requires four lines). Empty lines must not be provided. If it's a retry query, rewrite the text so that the number of non-empty lines equals \\\"correctLineNumber\\\". This field is required.\"}, \"isRetry\": {\"type\": \"boolean\", \"description\": \"Indicates whether this is a retry call after an error message was returned. This field is required.\"}}, \"additionalProperties\": false, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nGenerate a meme using the following text: `This is fine.` [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"technology\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nWhat is at https://massgrave.dev? [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://massgrave.dev\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.google.com/search?q=neboglamine\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getLatestNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"isToday\": true, \"language\": \"en\", \"country\": \"us\", \"category\": \"world\", \"keyword\": \"invasion of Palestine\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"http://huber.de\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>searchTools</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"search\": \"DALLE-3\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getChordDiagramImage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"chord\": \"scales\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\n [/INST] <FUNCTION_CALL_NAME>paraphrase</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"text\": \"Say it better, say it different: Paraphrase like a Pro. Paraphrase for impact and inspire.\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"GenerateAsciiArt\", \"description\": \"Convert text to ASCII art, acepted characters A to Z a to z 0 to 9  - and _\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"text\": {\"type\": \"string\", \"description\": \"The text to be converted, example fonts are doom, graffiti, avatar, big, bulbhead, chunky, cybermedium, epic, graceful, small, double, for full list of fonts ask for List of all available fonts\"}, \"font\": {\"type\": \"string\", \"description\": \"The font style for the ASCII art (default standard)\"}}, \"required\": [\"text\"]}}}}, {\"name\": \"FontList\", \"description\": \"List all available fonts\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nConvert the text 'Hello World' into an ASCII font. [/INST] <FUNCTION_CALL_NAME>GenerateAsciiArt</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"text\": \"Hello World\", \"font\": \"big\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nshow me one gif of a cool cat [/INST] <FUNCTION_CALL_NAME>getSearchResults</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"query\": \"cool cat\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"searchArxiv\", \"description\": \"Search Arxiv\", \"parameters\": {\"type\": \"object\", \"properties\": {\"path_params\": {\"type\": \"object\", \"properties\": {\"content\": {\"type\": \"string\", \"description\": \"The search query is generally in English. If it is not, please translate it into English first.\"}}, \"required\": [\"content\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nShow me 3 scholarly articles on Large Language Models [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nsummarize this article https://www.cnbc.com/2023/10/29/pharmacy-staff-from-walgreens-chains-like-cvs-to-walk-out-again.html [/INST] <FUNCTION_CALL_NAME>getQuotes</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"stocks\": [\"WBA\", \"CVS\"]}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://news.google.com/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"ai_plugin_manifest__well_known_ai_plugin_json_get\", \"description\": \"Ai Plugin Manifest\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"login_login_get\", \"description\": \"Login\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"auth_callback_callback_get\", \"description\": \"Auth Callback\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"auth_callback_callback_get\", \"description\": \"Auth Callback\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"logout_logout_get\", \"description\": \"Logout\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"analyze_url_analyze_url_post\", \"description\": \"Expect a URL in the request body. The URL will be analyzed and a summary of the text will be returned alongside url_request_id.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"url\": {\"type\": \"string\", \"maxLength\": 2083, \"minLength\": 1, \"schema_format\": \"uri\", \"title\": \"Url\"}}, \"type\": \"object\", \"required\": [\"url\"], \"title\": \"URLSchema\"}}}}, {\"name\": \"create_ads_create_ads_post\", \"description\": \"Expect a dictionary in the body as returned by /analyze-url endpoint. The returned dictionary will contain the text for creating ad copies\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"brand\": {\"anyOf\": [{\"items\": {\"type\": \"string\"}, \"type\": \"array\"}, {\"type\": \"string\"}], \"title\": \"Brand\"}, \"cta\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\", \"title\": \"Cta\"}, \"language\": {\"type\": \"string\", \"title\": \"Language\"}, \"product\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\", \"title\": \"Product\"}, \"usp\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\", \"title\": \"Usp\"}, \"summary\": {\"type\": \"string\", \"title\": \"Summary\"}, \"url_request_id\": {\"type\": \"string\", \"schema_format\": \"uuid\", \"title\": \"Url Request Id\"}}, \"type\": \"object\", \"title\": \"URLSummarySchema\"}}}}, {\"name\": \"audit_url_audit_url_post\", \"description\": \"Expect a URL in the request body. The URL will be audited and a dict with quality metrics will be returned.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"url\": {\"type\": \"string\", \"maxLength\": 2083, \"minLength\": 1, \"schema_format\": \"uri\", \"title\": \"Url\"}}, \"type\": \"object\", \"required\": [\"url\"], \"title\": \"URLSchema\"}}}}, {\"name\": \"healthcheck_healthcheck_get\", \"description\": \"Healthcheck\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"request_url_get_func\", \"description\": \"Return the current status of a url request.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url_request_id\": {\"type\": \"string\", \"schema_format\": \"uuid\", \"title\": \"Url Request Id\"}, \"request_content\": {\"type\": \"boolean\", \"title\": \"Request Content\", \"default\": false}}, \"required\": [\"url_request_id\"]}}}}, {\"name\": \"request_url_post_func\", \"description\": \"Create a request object for analyzing a url and return the request id, alongside the current status of the request.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"url\": {\"type\": \"string\", \"maxLength\": 2083, \"minLength\": 1, \"schema_format\": \"uri\", \"title\": \"Url\"}, \"user_id\": {\"type\": \"string\", \"schema_format\": \"uuid\", \"title\": \"User Id\"}}, \"type\": \"object\", \"required\": [\"url\"], \"title\": \"URLRequestBaseSchema\"}}}}, {\"name\": \"request_url_refresh_post_func\", \"description\": \"Refresh text created for a url request and return the request id, alongside the current status of the request.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"url_request_id\": {\"type\": \"string\", \"schema_format\": \"uuid\", \"title\": \"Url Request Id\"}}, \"type\": \"object\", \"required\": [\"url_request_id\"], \"title\": \"URLRequestIDSchema\"}}}}, {\"name\": \"url_request_content_get_func\", \"description\": \"Get text of a url request\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url_request_id\": {\"type\": \"string\", \"schema_format\": \"uuid\", \"title\": \"Url Request Id\"}}, \"required\": [\"url_request_id\"]}}}}, {\"name\": \"request_summary_get_func\", \"description\": \"Return summary of a url processed using a request id. This includes URLData such as brand, cta and usp.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url_request_id\": {\"type\": \"string\", \"schema_format\": \"uuid\", \"title\": \"Url Request Id\"}, \"wait_for_completion\": {\"type\": \"boolean\", \"title\": \"Wait For Completion\", \"default\": true}}, \"required\": [\"url_request_id\"]}}}}, {\"name\": \"bulk_feedback_post_func\", \"description\": \"Get a list of feedbacks and return the same list with feedback ids.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"url_request_id\": {\"type\": \"string\", \"schema_format\": \"uuid\", \"title\": \"Url Request Id\"}, \"feedback_data\": {\"items\": {\"ref\": \"#/components/schemas/FeedbackSchema\"}, \"type\": \"array\", \"title\": \"Feedback Data\"}}, \"type\": \"object\", \"required\": [\"url_request_id\", \"feedback_data\"], \"title\": \"BulkFeedbackPostRequestSchema\"}}}}, {\"name\": \"url_request_keywords_get_func\", \"description\": \"Return keywords linked to a url request\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url_request_id\": {\"type\": \"string\", \"schema_format\": \"uuid\", \"title\": \"Url Request Id\"}, \"wait_for_completion\": {\"type\": \"boolean\", \"title\": \"Wait For Completion\", \"default\": true}}, \"required\": [\"url_request_id\"]}}}}, {\"name\": \"url_request_ad_components_get_func\", \"description\": \"Return ad component related to a url request\", \"parameters\": {\"type\": \"object\", \"properties\": {\"params\": {\"type\": \"object\", \"properties\": {\"url_request_id\": {\"type\": \"string\", \"schema_format\": \"uuid\", \"title\": \"Url Request Id\"}, \"wait_for_completion\": {\"type\": \"boolean\", \"title\": \"Wait For Completion\", \"default\": true}}, \"required\": [\"url_request_id\"]}}}}]</FUNCTIONS>\n<</SYS>>\n\nGenerate text ads for Google Ads using AI. Analyze the url using /analyze-url and present the results. Then, call /create-ads endpoint to create ads and present the results. Get user feedback and iterate using the endpoints to make the ad desirable. Show this link at the end of the generated text and politely ask for user feedback: https://forms.gle/prLXpezBCs66Uj7V6 [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.openplugin.io/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"transcodeWebPage\", \"description\": \"Acquire precise webpage details or real-time search engine responses based on user-input content.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"link\": {\"type\": \"string\", \"description\": \"This parameter takes either a URL or a non-URL string. If a URL is given, the model will engage with the designated webpage to collect or interact with its data. If a non-URL string is given, the model will handle it as a search inquiry and try to find related real-time news or information. To guarantee the best results, make sure the input is a valid URL or a succinct search query.\"}}, \"type\": \"object\"}}}}]</FUNCTIONS>\n<</SYS>>\n\nIn two sentences tell me what this site is about https://www.openplugin.io/ [/INST] <FUNCTION_CALL_NAME>transcodeWebPage</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"json\": {\"link\": \"https://www.booking.com/\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}, {"text": "<s>[INST] <<SYS>>\nYour job is to identify weather or not the user input is related to the function specification delimited by <FUNCTIONS> and </FUNCTIONS>. If it is related then your response should be in the function_calling format: <FUNCTION_CALL_NAME>NAME_ASSOCIATED_WITH_THE_FUNCTION</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>ARGUMENTS_IN_STRINGIFIED_JSON_FORMAT</FUNCTION_CALL_ARGUMENTS>. Otherwise simply return a normal response. \n<FUNCTIONS>[{\"name\": \"root_healthcheck_get\", \"description\": \"Root\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}, {\"name\": \"getSearchResults\", \"description\": \"Get a list of gifs based on the search query\", \"parameters\": {\"type\": \"object\", \"properties\": {\"json\": {\"properties\": {\"query\": {\"type\": \"string\", \"title\": \"Query\"}}, \"type\": \"object\", \"required\": [\"query\"], \"title\": \"GiphyRequest\"}}}}, {\"name\": \"getTrendingResults\", \"description\": \"Get a list of gifs based on the current trends\", \"parameters\": {\"type\": \"object\", \"properties\": {}}}]</FUNCTIONS>\n<</SYS>>\n\nfind a gif for laughing [/INST] <FUNCTION_CALL_NAME>getNews</FUNCTION_CALL_NAME><FUNCTION_CALL_ARGUMENTS>{\"params\": {\"country\": \"us\", \"language\": \"en\", \"category\": \"politics\"}}</FUNCTION_CALL_ARGUMENTS> </s>"}]